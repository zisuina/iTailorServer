package recommendation;

/**
 * Created by liker on 09/08/2015 0009.
 * Group iTailor.hunters.neu.edu.cn
 */
public class RunRecommendation {
    public void run(){
        //TODO 用户已评分衣服数量判断>=10
        if(false){
            //TODO 计算用户相似度
                //TODO 用户身体数据，参与游戏的结果等
                //TODO 用户浏览搜索记录可视为相似度的判断依据
            //TODO 获取相似度最高的用户
            //TODO 从数据中获取相似度最高用户的最近点赞衣服
            //TODO 推荐给用户
            //TODO 获取并储存用户给分数据
        }else{
            //TODO 从数据库中取出该用户已评分的衣服数据
            //TODO  转换成二进制数据ArrayList
            //TODO 计算十件衣服不同组件的不同得分
            //TODO 初始化种群数据,计算适应度
            //TODO 把最高适应度衣服加到收敛矩阵
            //TODO 判断收敛矩阵是否收敛
            while(true){
                //TODO 根据初始种群的数量选择联盟算子N，随机挑N件，最高值做父辈
                //TODO 选择交叉算子，对父母染色体组件进行交换
                //TODO 选择变异算子，对孩子染色体进行变异(变异率如何控制)
                //TODO 对两条新孩子染色体计算适应度
                //TODO 初始种群排序
                //TODO 替换排序完的最差两个后代
                //(思考：为什么不多制造后代替换初始种群)
                //TODO 把新种群最高值加入收敛矩阵(如果放入平均值值得考虑)
                //(思考：只需要比较两个新后代与初始矩阵最高值即可，因为我们只care收敛性)
                //TODO 如果跑了500次收敛矩阵还不收敛，直接跳出
            }
            //TODO 随机选出收敛矩阵中的一件衣服进行二进制解码(取出一件还是多件值得考虑)
        }
        //TODO 取出用户评分衣服的图片数据数组File[]与得分数据
        //TODO 依次分析图片数据的主要三颜色与其像素所占比 存入数据库
        //TODO 读取所有历史数据（DAY1,RED,50,GREEN,80,BLUE,20;Day2 ...）
        //TODO 根据遗忘曲线刷新所有<Color,Score>数据
        //TODO 对所有<Color,Score>进行投票,取出票数最高的颜色(加权计算)，视为他目前喜欢的颜色A
        //(思考：可以取出左右颜色，利用喜欢程度的概率矩阵进行下一步计算，暂不考虑)
        //TODO 从数据库加载【用户专属的】【表一】，没有就加载大众颜色喜欢表
        //TODO 计算出表二，喜欢A颜色但是选了其他颜色的概率
        //TODO 由表一表二计算出表三
        //TODO 根据表三来选择推荐的颜色
        //TODO 把表三的数据导入表一

        //输出 crustal is so amazing.

    }
}
